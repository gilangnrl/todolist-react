{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/layout/AddTodo.js","components/layout/Header.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","getStyle","setTodo","_this","props","todo","completed","padding","background","color","borderBottom","textDecoration","markComplete","e","console","log","_this$props$todo","this","id","title","react_default","a","createElement","style","type","onChange","bind","className","onClick","delTodo","Component","Todos","_this2","todos","map","index","components_TodoItem","key","Addtodo","state","setState","Object","defineProperty","target","name","value","onSubmit","listTitle","preventDefault","alert","addTodo","display","flex","placeholder","border","boxShadow","headerStyle","textAlign","backgroundColor","linkStyle","Header","Link","to","About","Fragment","App","toConsumableArray","filter","newTodo","uuid","v4","concat","BrowserRouter","layout_Header","Route","exact","path","render","AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c13e991.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nclass TodoItem extends Component {\n\n  getStyle = () => {\n    const setTodo = this.props.todo.completed\n      return {\n        padding: '10px',\n        background: '#f4f4f4',\n        color: setTodo ? '#b6b6b6': '#333',\n        borderBottom: '1px #ccc solid',\n        textDecoration: setTodo ?'line-through' : 'none'\n      }\n  }\nmarkComplete=(e)=> {\n  console.log(this.props);\n}\n\n  render() {\n    const { id, title } = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)}/> {' '}\n          { title }\n          <button className=\"delBtn\" onClick={this.props.delTodo.bind(this, id)}>Delete</button>\n        </p>\n      </div>\n    )\n  }\n}\n\n\n//PropType\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n}\nexport default TodoItem\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n  markComplete = () => {\n    console.log('hello')\n  }\n  render() {\n      return this.props.todos.map((todo, index) =>\n      <TodoItem key={todo.id} todo={todo} markComplete=\n      {this.props.markComplete} delTodo={this.props.delTodo} /> );\n        \n    }\n}\n\n//PropType\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired\n}\n\n\nexport default Todos;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nclass Addtodo extends Component {\n  state = {\n    title: ''\n  }\n\n  onChange = (e) => this.setState({[e.target.name]: e.target.value});\n\n  onSubmit = (e) => {\n    const listTitle = this.state.title\n    e.preventDefault()\n    if(listTitle === ''){\n      alert(\"Wajib di isi\")\n    }else {\n    this.props.addTodo(listTitle);\n    this.setState({ title: '' })\n  }\n  } \n\n  render() {\n    return (\n      <form onSubmit= {this.onSubmit} style={{display: 'flex'}}>\n          <input \n          type=\"text\" \n          name=\"title\" \n          style={{flex: '10', padding: '5px'}}\n          placeholder=\"Add Todo...\" \n          value={this.state.title}\n          onChange={this.onChange}\n          />\n          <input\n          type=\"submit\" \n          value=\"submit\" \n          className=\"btn\" \n          style={{flex: '1', border: 'none', boxShadow: 'none'}} />\n      </form>\n    )\n  }\n}\n\nAddtodo.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n}\nexport default Addtodo\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n  return (\n    <header style={headerStyle}>\n        <h1>Todolist</h1>\n        <Link style={linkStyle} to=\"/\">Home</Link> | \n        <Link style={linkStyle} to=\"/About\"> About</Link>\n    </header>\n  )\n}\n\nconst headerStyle = {\n    textAlign: 'center',\n    backgroundColor: '#333',\n    color: '#fff',\n    padding: '10px'\n}\nconst linkStyle = {\n  color: '#fff',\n  textDecoration: 'none',\n}\n\n\nexport default Header; ","import React from 'react'\n\nfunction About() {\n  return (\n    <React.Fragment>\n      <h1>This is the TodoList app v1.0.0. Just learn how to use React</h1>\n    </React.Fragment>\n  )\n}\n\n\nexport default About;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Todos from './components/Todos';\nimport Addtodo from './components/layout/AddTodo'\nimport Header from './components/layout/Header'\nimport About from './components/pages/About'\nimport uuid from 'uuid';\nimport './App.css';\n\nclass App extends Component {\n  //mark to complet task\nmarkComplete = (id) => {\n  console.log(id)\n  this.setState({ todos: this.state.todos.map(todo => {\n    if(todo.id === id) {\n      todo.completed = !todo.completed\n    }\n    return todo\n  })})\n}\n//delete todo list\ndelTodo = (id) => {\n  console.log(\"hello BOO\")\n  this.setState({todos: [...this.state.todos.filter(todo => todo.id !== id)]})\n}\n//add todo list\naddTodo = (title) => {\n  const newTodo = {\n    id: uuid.v4(),\n    title,\n    completed:false\n  }\n  this.setState({todos: [...this.state.todos, newTodo]})\n}\n\n  state = {\n    todos: [\n      {\n        id: uuid.v4(),\n        title: 'Take Out the Trash',\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: 'Take a Bath',\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: 'Go to Indomaret',\n        completed: false,\n      }\n    ]\n  }\n\n  render() {\n    return (\n      <Router>\n      <div className=\"App\">\n       <div className= \"container\">\n          <Header />\n          <Route exact path=\"/\" render={props => (\n            <React.Fragment>\n              <Addtodo addTodo={this.addTodo} />\n              <Todos todos={this.state.todos} markComplete=\n              {this.markComplete} delTodo={this.delTodo}/>\n\n            </React.Fragment>\n          )} />\n          <Route path=\"/About\" component={About} />\n        </div>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}